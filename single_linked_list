{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyN5nzpZxliVdPOCedOuqaz3",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/iruthvik/movie-tracker/blob/main/single_linked_list\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X9vhGZbpPUFu",
        "outputId": "deffafdb-0f69-4fe1-929d-bf38590c032a"
      },
      "source": [
        "class node:\r\n",
        "  def __init__(self,data):\r\n",
        "    self.data = data\r\n",
        "    self.next = None\r\n",
        "class linkedlist:\r\n",
        "  def __init__(self):\r\n",
        "    self.head= None\r\n",
        "    self.last_node = None\r\n",
        "  def append(self,data):\r\n",
        "    if self.last_node is None:\r\n",
        "      self.head= node(data)\r\n",
        "      self.last_node = self.head\r\n",
        "    else:\r\n",
        "      self.last_node.next = node(data)\r\n",
        "      self.last_node= self.last_node.next\r\n",
        "  def display(self):\r\n",
        "    current=self.head\r\n",
        "    while current is not None:\r\n",
        "      print(current.data,\"-->\",end=\" \")\r\n",
        "      current=current.next\r\n",
        "      print(\"Null\")\r\n",
        "a_list = linkedlist()\r\n",
        "n=int(input(\"enter your value \"))\r\n",
        "for i in range(n):\r\n",
        "  d= int(input(\"enter numbers \"))\r\n",
        "  a_list.append(d)\r\n",
        "a_list.display()"
      ],
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "enter your value 3\n",
            "enter numbers 10\n",
            "enter numbers 20\n",
            "enter numbers 30\n",
            "10 --> Null\n",
            "20 --> Null\n",
            "30 --> Null\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}